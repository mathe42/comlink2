name: Security Review
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  security-analysis:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Generate PR diff
        run: |
          git diff origin/${{ github.base_ref }}...HEAD > temp.patch
          echo "Generated diff with $(wc -l < temp.patch) lines"

      - name: Install claude-code
        run: npm install -g @anthropic/claude-code

      - name: Run security analysis
        id: security-check
        run: |
          # Create analysis prompt
          cat > analysis_prompt.txt << 'EOF'
          Please analyze the attached patch file for potential security vulnerabilities. Focus on:
          
          1. Input validation issues
          2. Authentication/authorization bypasses
          3. Injection vulnerabilities (XSS, SQL, etc.)
          4. Unsafe deserialization
          5. Hardcoded secrets or credentials
          6. Path traversal vulnerabilities
          7. Insecure cryptographic implementations
          8. Race conditions
          9. Memory safety issues
          10. Logic flaws that could lead to security issues
          
          For each finding, provide:
          - Severity level (Critical/High/Medium/Low)
          - Description of the vulnerability
          - Affected code location
          - Recommended fix
          
          If no security issues are found, state "No security vulnerabilities detected."
          EOF
          
          # Run claude-code analysis
          claude-code --non-interactive --prompt "$(cat analysis_prompt.txt)" --file temp.patch > security_analysis.txt 2>&1 || echo "Analysis completed with warnings"
          
          # Format output for PR comment
          echo "## ðŸ”’ Security Analysis Results" > pr_comment.md
          echo "" >> pr_comment.md
          echo "**Analyzed changes:** $(wc -l < temp.patch) lines of diff" >> pr_comment.md
          echo "" >> pr_comment.md
          echo "### Analysis Report" >> pr_comment.md
          echo "" >> pr_comment.md
          echo '```' >> pr_comment.md
          cat security_analysis.txt >> pr_comment.md
          echo '```' >> pr_comment.md
          echo "" >> pr_comment.md
          echo "_ðŸ¤– Automated security analysis powered by Claude Code_" >> pr_comment.md

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const comment = fs.readFileSync('pr_comment.md', 'utf8');
            
            // Check if there's already a security analysis comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const existingComment = comments.find(comment => 
              comment.body.includes('ðŸ”’ Security Analysis Results')
            );
            
            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: security-analysis
          path: |
            temp.patch
            security_analysis.txt
            pr_comment.md
          retention-days: 30